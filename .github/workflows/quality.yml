name: Code Quality & Security

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly

jobs:
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.18.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        uses: actions/cache@v4
        id: cache-cargo-audit
        with:
          path: ~/.cargo/bin/cargo-audit
          key: cargo-audit-cache-${{ runner.os }}
          restore-keys: |
            cargo-audit-cache-

      - name: Install cargo-audit if not cached
        if: steps.cache-cargo-audit.outputs.cache-hit != 'true'
        run: cargo install cargo-audit

      - name: Run cargo-audit
        run: |
          cd src-tauri
          cargo audit

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install grcov
        uses: actions/cache@v4
        id: cache-grcov
        with:
          path: ~/.cargo/bin/grcov
          key: grcov-cache-${{ runner.os }}
          restore-keys: |
            grcov-cache-

      - name: Install grcov if not cached
        if: steps.cache-grcov.outputs.cache-hit != 'true'
        run: cargo install grcov

      - name: Install dependencies (ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: npm install

      - name: Generate coverage report
        id: coverage
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Cinstrument-coverage'
          LLVM_PROFILE_FILE: 'coverage-%p-%m.profraw'
        run: |
          cd src-tauri
          cargo test
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info

      - name: Upload coverage reports to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: ./src-tauri/lcov.info

      - name: Upload HTML coverage report
        if: always() && steps.coverage.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-html
          path: coverage/html

      - name: Add coverage report to PR
        if: always() && steps.coverage.outcome == 'success' && github.event_name == 'pull_request'
        run: |
          echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
          cat coverage/coverage.md >> $GITHUB_STEP_SUMMARY

  dependencies:
    name: Dependency Check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'ServeLite'
          path: '.'
          format: 'HTML'
          args: >
            --failOnCVSS 7
            --enableRetired

      - name: Upload dependency check report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports

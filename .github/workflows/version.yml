name: Version Management

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'CHANGELOG.md'
      - 'package.json'
      - 'src-tauri/Cargo.toml'

permissions:
  contents: write
  pull-requests: write
  checks: read
  statuses: read

jobs:
  version:
    name: Update Version
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          token: ${{ secrets.PAT_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Generate changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          git-message: 'chore(release): {version}'
          preset: 'angular'
          tag-prefix: 'v'
          output-file: 'CHANGELOG.md'
          skip-version-file: true
          skip-commit: true

      - name: Update version in package.json
        if: steps.changelog.outputs.skipped == 'false'
        run: |
          NEW_VERSION=${{ steps.changelog.outputs.version }}
          jq ".version = \"$NEW_VERSION\"" package.json > package.json.tmp
          mv package.json.tmp package.json

      - name: Update version in Cargo.toml
        if: steps.changelog.outputs.skipped == 'false'
        run: |
          NEW_VERSION=${{ steps.changelog.outputs.version }}
          sed -i "s/^version = \".*\"/version = \"$NEW_VERSION\"/" src-tauri/Cargo.toml

      - name: Create Pull Request
        if: steps.changelog.outputs.skipped == 'false'
        id: create-pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT_TOKEN }}
          commit-message: "chore: update version to ${{ steps.changelog.outputs.version }}"
          title: "chore: release ${{ steps.changelog.outputs.version }}"
          body: |
            This PR updates the version to ${{ steps.changelog.outputs.version }}
            
            Changes:
            ${{ steps.changelog.outputs.clean_changelog }}
          branch: "release/v${{ steps.changelog.outputs.version }}"
          base: main
          delete-branch: true

      - name: Enable Auto-merge
        if: steps.changelog.outputs.skipped == 'false' && steps.create-pr.outputs.pull-request-number != ''
        run: |
          gh pr merge --auto --merge --delete-branch "${{ steps.create-pr.outputs.pull-request-number }}"
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}

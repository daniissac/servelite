name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.id }}
      release_upload_url: ${{ steps.create-release.outputs.upload_url }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Generate Release Notes
        id: release_notes
        run: |
          cat > release_notes.md << 'EOL'
          ServeLite ${{ env.VERSION }}
          
          A minimalist system tray application for easily sharing local directories across different operating systems.
          
          Features
          --------
          • One-click directory sharing via system tray
          • Cross-platform support (Windows, macOS, Linux)
          • Zero configuration required
          • Native system integration
          • Local network file serving
          
          Components
          ----------
          • System tray integration
          • Start/Stop server functionality
          • Directory selection dialog
          • Cross-platform builds
          • Automated release process
          
          Installation
          ------------
          Download the appropriate installer for your platform:
          
          • Windows: ServeLite_${{ env.VERSION }}_x64.msi or ServeLite_${{ env.VERSION }}_x64-setup.exe
          • macOS: ServeLite_${{ env.VERSION }}_x64.dmg
          • Linux: servelite_${{ env.VERSION }}_amd64.deb or servelite_${{ env.VERSION }}_amd64.AppImage
          
          Usage
          -----
          1. Launch ServeLite - it will appear in your system tray
          2. Click the tray icon to show the menu
          3. Select "Start Server" and choose a directory to serve
          4. Access your files at http://localhost:8000
          5. Use "Stop Server" to stop serving files
          6. Use "Quit" to exit the application
          EOL

      - name: Create Release
        id: create-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v1
        with:
          name: ServeLite ${{ env.VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install ImageMagick (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          choco install imagemagick.app

      - name: Generate Windows icons
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: |
          Set-Location src-tauri/icons
          Write-Host "Current directory: $(Get-Location)"
          Write-Host "Contents before conversion:"
          Get-ChildItem -Force
          magick 128x128.png -define icon:auto-resize=16,24,32,48,64,96,128 icon.ico
          if (-not (Test-Path icon.ico)) {
            Write-Error "Failed to generate icon.ico"
            exit 1
          }
          Write-Host "Contents after conversion:"
          Get-ChildItem -Force
          Write-Host "Icon file details:"
          Get-Item icon.ico | Select-Object Name, Length, CreationTime, LastWriteTime

      - name: Install frontend dependencies
        run: npm install

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}
          tagName: ${{ github.ref_name }}
          releaseName: 'ServeLite ${{ github.ref_name }}'
          releaseBody: ''
          releaseDraft: false
          prerelease: false

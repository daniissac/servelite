name: Release ServeLite

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install dependencies
        run: npm install

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Run clippy
        run: cd src-tauri && cargo clippy -- -D warnings

      - name: Run tests
        run: cd src-tauri && cargo test

  build:
    needs: test
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - platform: macos-latest
            artifact_name: ServeLite.app
            asset_name: ServeLite-macos.dmg
          - platform: ubuntu-latest
            artifact_name: servelite
            asset_name: ServeLite-linux.AppImage
          - platform: windows-latest
            artifact_name: ServeLite.exe
            asset_name: ServeLite-windows.msi

    name: Build (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install dependencies
        run: npm install

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__
          releaseName: "ServeLite v__VERSION__"
          releaseBody: |
            See the assets to download this version and install.
            
            Changes in this Release:
            - Auto port selection (8000-8099)
            - Live reload support
            - Recent directories menu
            - Copy URL feature
            - Improved error handling
          releaseDraft: true
          prerelease: false

  verify:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    name: Verify Build (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Verify macOS build
        if: matrix.platform == 'macos-latest'
        run: |
          chmod +x ./artifacts/bundle/dmg/ServeLite*.dmg
          hdiutil attach ./artifacts/bundle/dmg/ServeLite*.dmg
          test -d "/Volumes/ServeLite/ServeLite.app"
          "/Volumes/ServeLite/ServeLite.app/Contents/MacOS/servelite" --version
          hdiutil detach "/Volumes/ServeLite"

      - name: Verify Linux build
        if: matrix.platform == 'ubuntu-latest'
        run: |
          chmod +x ./artifacts/bundle/appimage/ServeLite*.AppImage
          ./artifacts/bundle/appimage/ServeLite*.AppImage --version

      - name: Verify Windows build
        if: matrix.platform == 'windows-latest'
        run: |
          $msiFile = Get-ChildItem ./artifacts/bundle/msi/ServeLite*.msi
          Start-Process msiexec.exe -ArgumentList "/i `"$msiFile`" /qn" -Wait
          $serveLiteExe = "C:\Program Files\ServeLite\ServeLite.exe"
          & $serveLiteExe --version
          Start-Process msiexec.exe -ArgumentList "/x `"$msiFile`" /qn" -Wait
